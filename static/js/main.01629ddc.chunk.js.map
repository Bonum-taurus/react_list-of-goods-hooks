{"version":3,"sources":["App.tsx","index.tsx"],"names":["Queries","goodsFromServer","Good","good","App","useState","query","setQuery","reverse","setReverse","copyGoods","alphabetically","sort","good1","good2","localeCompare","length","className","onClick","type","map","ReactDOM","render","document","getElementById"],"mappings":"6KA0BKA,E,kDArBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnC,oBAAI,UAAQ,OAAZ,SAAoBA,M,SAGjBH,K,wBAAAA,E,iBAAAA,M,KAKE,IAAMI,EAAgB,WAC3B,MAA0BC,mBAAuB,IAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEIC,EAAmB,UAAOT,GAc9B,OAZIK,IAAUN,EAAQW,iBACpBD,EAAYA,EAAUE,MAAK,SAACC,EAAOC,GACjC,OAAOD,EAAME,cAAcD,OAI3BR,IAAUN,EAAQgB,SACpBN,EAAYA,EAAUE,MAAK,SAACC,EAAOC,GACjC,OAAOD,EAAMG,OAASF,EAAME,WAK9B,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMX,EAASP,EAAQW,iBAChCQ,KAAK,SACLF,UAAWX,IAAUN,EAAQW,eAC3B,iBAEA,0BANJ,iCAYA,wBACEO,QAAS,kBAAMX,EAASP,EAAQgB,SAChCG,KAAK,SACLF,UAAWX,IAAUN,EAAQgB,OAC3B,oBAEA,6BANJ,4BAYA,wBACEE,QAAS,WACP,OAAiBT,GAAVD,IAETW,KAAK,SACLF,WAAuB,IAAZT,EACT,oBAEA,6BARJ,sBAcY,KAAVF,GAAgBE,IAChB,wBACEU,QAAS,WACPX,EAAS,IACTE,GAAW,IAEbU,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACE,8BACe,IAAZT,EACCE,EAAUF,UAAUY,KAAI,SAAAjB,GAAI,OAC1B,cAAC,EAAD,CAAMA,KAAMA,GAAWA,MAEzBO,EAAUU,KAAI,SAAAjB,GAAI,OAChB,cAAC,EAAD,CAAMA,KAAMA,GAAWA,cC5GrCkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.01629ddc.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport React, { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {\n  good: string,\n};\n\nexport const Good: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n\nenum Queries {\n  alphabetically = 'abc...',\n  length = 'length',\n}\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState<Queries | ''>('');\n  const [reverse, setReverse] = useState(false);\n\n  let copyGoods: string[] = [...goodsFromServer];\n\n  if (query === Queries.alphabetically) {\n    copyGoods = copyGoods.sort((good1, good2) => {\n      return good1.localeCompare(good2);\n    });\n  }\n\n  if (query === Queries.length) {\n    copyGoods = copyGoods.sort((good1, good2) => {\n      return good1.length - good2.length;\n    });\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setQuery(Queries.alphabetically)}\n          type=\"button\"\n          className={query === Queries.alphabetically ? (\n            'button is-info'\n          ) : (\n            'button is-info is-light'\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setQuery(Queries.length)}\n          type=\"button\"\n          className={query === Queries.length ? (\n            'button is-success'\n          ) : (\n            'button is-success is-light'\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            return reverse ? setReverse(false) : setReverse(true);\n          }}\n          type=\"button\"\n          className={reverse === true ? (\n            'button is-warning'\n          ) : (\n            'button is-warning is-light'\n          )}\n        >\n          Reverse\n        </button>\n\n        {(query !== '' || reverse) && (\n          <button\n            onClick={() => {\n              setQuery('');\n              setReverse(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reverse === true ? (\n            copyGoods.reverse().map(good => (\n              <Good good={good} key={good} />\n            ))) : (\n            copyGoods.map(good => (\n              <Good good={good} key={good} />\n            )))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}